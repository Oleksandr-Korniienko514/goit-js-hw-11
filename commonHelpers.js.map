{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import 'izitoast/dist/css/iziToast.min.css';\nimport iziToast from 'izitoast';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nexport function getImages(img) {\n  const form = document.querySelector('.form');\n  const loader = document.createElement('div');\n  loader.className = 'loader';\n  form.insertAdjacentElement('afterend', loader);\n\n  const BASE_URL = 'https://pixabay.com/api/';\n  const params = new URLSearchParams({\n    key: '45213588-1347783919d0c1f7f1631233d',\n    q: img,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n    per_page: 20,\n  });\n\n  const url = `${BASE_URL}?${params}`;\n\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    })\n    .catch(error => {\n      console.error('Error fetching images:', error);\n      iziToast.error({\n        title: 'Error',\n        message: 'An error occurred while fetching images. Please try again later.',\n        position: 'topRight',\n      });\n      throw error;\n    })\n    .finally(() => {\n      if (loader) {\n        loader.remove();\n      }\n    });\n}\n","const gallery = document.querySelector('.gallery');\n\nfunction imgTemplate({\n  webformatURL,\n  largeImageURL,\n  tags,\n  likes,\n  views,\n  comments,\n  downloads,\n}) {\n  return `<li class=\"gallery-card\"> \n    <figure class=\"image-container\">\n      <a href=\"${largeImageURL}\">\n        <img class=\"image-thumbnail\" src=\"${webformatURL}\" alt=\"${tags}\" title=\"\" width=\"360\" height=\"200\"/>\n      </a>\n      <figcaption class=\"image-details\">\n        <ul class=\"details-list\">\n          <li class=\"details-item\">Likes<p class=\"details-count\">${likes}</p></li>\n          <li class=\"details-item\">Views<p class=\"details-count\">${views}</p></li>\n          <li class=\"details-item\">Comments<p class=\"details-count\">${comments}</p></li>\n          <li class=\"details-item\">Downloads<p class=\"details-count\">${downloads}</p></li>\n        </ul>\n      </figcaption>\n    </figure>\n  </li>`;\n}\n\nfunction imgsTemplate(arr) {\n  return arr.map(imgTemplate).join('');\n}\n\nexport function renderImg(hits) {\n  const markup = imgsTemplate(hits);\n  gallery.innerHTML = markup;\n  const lightbox = new SimpleLightbox('.gallery a');\n  lightbox.refresh();\n}\n","import { getImages } from './js/pixabay-api';\nimport { renderImg } from './js/render-functions';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst refs = {\n  btnSearch: document.querySelector('.btn-search'),\n  form: document.querySelector('.form'),\n  input: document.querySelector('input'),\n  ul: document.querySelector('ul'),\n};\n\nrefs.form.addEventListener('submit', e => {\n  e.preventDefault();\n  refs.ul.innerHTML = '';\n\n  if (refs.input.value.trim()) {\n    getImages(refs.input.value)\n      .then(response => {\n        if (response && response.total !== 0) {\n          renderImg(response.hits);\n        } else {\n          iziToast.error({\n            title: 'Error',\n            message: 'Sorry, there are no images matching your search query. Please try again!',\n            position: 'topRight',\n          });\n        }\n      })\n      .catch(error => {\n        console.log('An error occurred:', error);\n        iziToast.error({\n          title: 'Error',\n          message: 'An error occurred while fetching images. Please check your internet connection and try again.',\n          position: 'topRight',\n        });\n      })\n      .finally(() => {\n        refs.input.value = '';\n      });\n  } else {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please enter a search term.',\n      position: 'topRight',\n    });\n  }\n});\n"],"names":["getImages","img","form","loader","BASE_URL","params","url","response","error","iziToast","gallery","imgTemplate","webformatURL","largeImageURL","tags","likes","views","comments","downloads","imgsTemplate","arr","renderImg","hits","markup","refs","e"],"mappings":"svBAIO,SAASA,EAAUC,EAAK,CAC7B,MAAMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAS,SAAS,cAAc,KAAK,EAC3CA,EAAO,UAAY,SACnBD,EAAK,sBAAsB,WAAYC,CAAM,EAE7C,MAAMC,EAAW,2BACXC,EAAS,IAAI,gBAAgB,CACjC,IAAK,qCACL,EAAGJ,EACH,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,SAAU,EACd,CAAG,EAEKK,EAAM,GAAGF,CAAQ,IAAIC,CAAM,GAEjC,OAAO,MAAMC,CAAG,EACb,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,uBAAuBA,EAAS,MAAM,EAAE,EAE1D,OAAOA,EAAS,MACtB,CAAK,EACA,MAAMC,GAAS,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EAC7CC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,mEACT,SAAU,UAClB,CAAO,EACKD,CACZ,CAAK,EACA,QAAQ,IAAM,CACTL,GACFA,EAAO,OAAM,CAErB,CAAK,CACL,CC3CA,MAAMO,EAAU,SAAS,cAAc,UAAU,EAEjD,SAASC,EAAY,CACnB,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACF,EAAG,CACD,MAAO;AAAA;AAAA,iBAEQL,CAAa;AAAA,4CACcD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA,mEAIHC,CAAK;AAAA,mEACLC,CAAK;AAAA,sEACFC,CAAQ;AAAA,uEACPC,CAAS;AAAA;AAAA;AAAA;AAAA,QAKhF,CAEA,SAASC,EAAaC,EAAK,CACzB,OAAOA,EAAI,IAAIT,CAAW,EAAE,KAAK,EAAE,CACrC,CAEO,SAASU,EAAUC,EAAM,CAC9B,MAAMC,EAASJ,EAAaG,CAAI,EAChCZ,EAAQ,UAAYa,EACH,IAAI,eAAe,YAAY,EACvC,QAAO,CAClB,CC9BA,MAAMC,EAAO,CACX,UAAW,SAAS,cAAc,aAAa,EAC/C,KAAM,SAAS,cAAc,OAAO,EACpC,MAAO,SAAS,cAAc,OAAO,EACrC,GAAI,SAAS,cAAc,IAAI,CACjC,EAEAA,EAAK,KAAK,iBAAiB,SAAUC,GAAK,CACxCA,EAAE,eAAc,EAChBD,EAAK,GAAG,UAAY,GAEhBA,EAAK,MAAM,MAAM,KAAI,EACvBxB,EAAUwB,EAAK,MAAM,KAAK,EACvB,KAAKjB,GAAY,CACZA,GAAYA,EAAS,QAAU,EACjCc,EAAUd,EAAS,IAAI,EAEvBE,EAAS,MAAM,CACb,MAAO,QACP,QAAS,2EACT,SAAU,UACtB,CAAW,CAEX,CAAO,EACA,MAAMD,GAAS,CACd,QAAQ,IAAI,qBAAsBA,CAAK,EACvCC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,gGACT,SAAU,UACpB,CAAS,CACT,CAAO,EACA,QAAQ,IAAM,CACbe,EAAK,MAAM,MAAQ,EAC3B,CAAO,EAEHf,EAAS,MAAM,CACb,MAAO,QACP,QAAS,8BACT,SAAU,UAChB,CAAK,CAEL,CAAC"}